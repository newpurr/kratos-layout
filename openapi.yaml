# Generated with protoc-gen-openapi
# https://github.com/google/gnostic/tree/master/cmd/protoc-gen-openapi

openapi: 3.0.3
info:
    title: ""
    version: 0.0.1
paths:
    /admin:
        post:
            tags:
                - Admin
            operationId: Admin_CreateAdmin
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/CreateAdminRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CreateAdminReply'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /admin/page-query:
        get:
            tags:
                - Admin
            operationId: Admin_PagingSearchAdmin
            parameters:
                - name: ids
                  in: query
                  schema:
                    type: array
                    items:
                        type: integer
                        format: uint32
                - name: username
                  in: query
                  schema:
                    type: string
                - name: password
                  in: query
                  schema:
                    type: string
                - name: nickname
                  in: query
                  schema:
                    type: string
                - name: mobile
                  in: query
                  schema:
                    type: string
                - name: isUsed
                  in: query
                  schema:
                    type: integer
                    format: int32
                - name: isDeleted
                  in: query
                  schema:
                    type: integer
                    format: int32
                - name: createdAt.beg
                  in: query
                  schema:
                    type: string
                - name: createdAt.end
                  in: query
                  schema:
                    type: string
                - name: createdUser
                  in: query
                  schema:
                    type: string
                - name: updatedAt.beg
                  in: query
                  schema:
                    type: string
                - name: updatedAt.end
                  in: query
                  schema:
                    type: string
                - name: updatedUser
                  in: query
                  schema:
                    type: string
                - name: pageSize
                  in: query
                  schema:
                    type: integer
                    format: int64
                - name: currentPage
                  in: query
                  schema:
                    type: integer
                    format: int64
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/AdminPaginationListReply'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /admin/{id}:
        get:
            tags:
                - Admin
            operationId: Admin_FindAdmin
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: integer
                    format: uint32
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetAdminReply'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        put:
            tags:
                - Admin
            operationId: Admin_UpdateAdmin
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: integer
                    format: uint32
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/UpdateAdminRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UpdateAdminReply'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        delete:
            tags:
                - Admin
            operationId: Admin_DeleteAdmin
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: integer
                    format: uint32
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/DeleteAdminReply'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /user:
        post:
            tags:
                - User
            operationId: User_CreateUser
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/CreateUserRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CreateUserReply'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /user/page-query:
        get:
            tags:
                - User
            operationId: User_PagingSearchUser
            parameters:
                - name: ids
                  in: query
                  schema:
                    type: array
                    items:
                        type: integer
                        format: uint32
                - name: name
                  in: query
                  schema:
                    type: string
                - name: pwd
                  in: query
                  schema:
                    type: string
                - name: isDeleted
                  in: query
                  schema:
                    type: integer
                    format: int32
                - name: createdAt.beg
                  in: query
                  schema:
                    type: string
                - name: createdAt.end
                  in: query
                  schema:
                    type: string
                - name: updatedAt.beg
                  in: query
                  schema:
                    type: string
                - name: updatedAt.end
                  in: query
                  schema:
                    type: string
                - name: pageSize
                  in: query
                  schema:
                    type: integer
                    format: int64
                - name: currentPage
                  in: query
                  schema:
                    type: integer
                    format: int64
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UserPaginationListReply'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /user/{id}:
        get:
            tags:
                - User
            operationId: User_FindUser
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: integer
                    format: uint32
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetUserReply'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        put:
            tags:
                - User
            operationId: User_UpdateUser
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: integer
                    format: uint32
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/UpdateUserRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UpdateUserReply'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        delete:
            tags:
                - User
            operationId: User_DeleteUser
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: integer
                    format: uint32
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/DeleteUserReply'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
components:
    schemas:
        AdminPaginationListReply:
            type: object
            properties:
                data:
                    type: array
                    items:
                        $ref: '#/components/schemas/GetAdminReply'
                pageMeta:
                    $ref: '#/components/schemas/AdminPaginationListReply_Page'
        AdminPaginationListReply_Page:
            type: object
            properties:
                totalPages:
                    type: integer
                    format: int64
                totalRows:
                    type: integer
                    format: int64
                pageSize:
                    type: integer
                    format: int64
                currentPage:
                    type: integer
                    format: int64
        CreateAdminReply:
            type: object
            properties:
                id:
                    type: integer
                    format: uint32
                username:
                    type: string
                password:
                    type: string
                nickname:
                    type: string
                mobile:
                    type: string
                isUsed:
                    type: integer
                    format: int32
                isDeleted:
                    type: integer
                    format: int32
                createdAt:
                    type: string
                createdUser:
                    type: string
                updatedAt:
                    type: string
                updatedUser:
                    type: string
        CreateAdminRequest:
            type: object
            properties:
                username:
                    type: string
                password:
                    type: string
                nickname:
                    type: string
                mobile:
                    type: string
                isUsed:
                    type: integer
                    format: int32
                isDeleted:
                    type: integer
                    format: int32
                createdUser:
                    type: string
                updatedUser:
                    type: string
        CreateUserReply:
            type: object
            properties:
                id:
                    type: integer
                    format: uint32
                name:
                    type: string
                pwd:
                    type: string
                isDeleted:
                    type: integer
                    format: int32
                createdAt:
                    type: string
                updatedAt:
                    type: string
        CreateUserRequest:
            type: object
            properties:
                name:
                    type: string
                pwd:
                    type: string
                isDeleted:
                    type: integer
                    format: int32
        DeleteAdminReply:
            type: object
            properties: {}
        DeleteUserReply:
            type: object
            properties: {}
        GetAdminReply:
            type: object
            properties:
                id:
                    type: integer
                    format: uint32
                username:
                    type: string
                password:
                    type: string
                nickname:
                    type: string
                mobile:
                    type: string
                isUsed:
                    type: integer
                    format: int32
                isDeleted:
                    type: integer
                    format: int32
                createdAt:
                    type: string
                createdUser:
                    type: string
                updatedAt:
                    type: string
                updatedUser:
                    type: string
        GetUserReply:
            type: object
            properties:
                id:
                    type: integer
                    format: uint32
                name:
                    type: string
                pwd:
                    type: string
                isDeleted:
                    type: integer
                    format: int32
                createdAt:
                    type: string
                updatedAt:
                    type: string
        GoogleProtobufAny:
            type: object
            properties:
                '@type':
                    type: string
                    description: The type of the serialized message.
            additionalProperties: true
            description: Contains an arbitrary serialized message along with a @type that describes the type of the serialized message.
        Status:
            type: object
            properties:
                code:
                    type: integer
                    description: The status code, which should be an enum value of [google.rpc.Code][google.rpc.Code].
                    format: int32
                message:
                    type: string
                    description: A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the [google.rpc.Status.details][google.rpc.Status.details] field, or localized by the client.
                details:
                    type: array
                    items:
                        $ref: '#/components/schemas/GoogleProtobufAny'
                    description: A list of messages that carry the error details.  There is a common set of message types for APIs to use.
            description: 'The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).'
        UpdateAdminReply:
            type: object
            properties:
                id:
                    type: integer
                    format: uint32
                username:
                    type: string
                password:
                    type: string
                nickname:
                    type: string
                mobile:
                    type: string
                isUsed:
                    type: integer
                    format: int32
                isDeleted:
                    type: integer
                    format: int32
                createdAt:
                    type: string
                createdUser:
                    type: string
                updatedAt:
                    type: string
                updatedUser:
                    type: string
        UpdateAdminRequest:
            type: object
            properties:
                id:
                    type: integer
                    format: uint32
                username:
                    type: string
                password:
                    type: string
                nickname:
                    type: string
                mobile:
                    type: string
                isUsed:
                    type: integer
                    format: int32
                isDeleted:
                    type: integer
                    format: int32
                createdUser:
                    type: string
                updatedUser:
                    type: string
        UpdateUserReply:
            type: object
            properties:
                id:
                    type: integer
                    format: uint32
                name:
                    type: string
                pwd:
                    type: string
                isDeleted:
                    type: integer
                    format: int32
                createdAt:
                    type: string
                updatedAt:
                    type: string
        UpdateUserRequest:
            type: object
            properties:
                id:
                    type: integer
                    format: uint32
                name:
                    type: string
                pwd:
                    type: string
                isDeleted:
                    type: integer
                    format: int32
        UserPaginationListReply:
            type: object
            properties:
                data:
                    type: array
                    items:
                        $ref: '#/components/schemas/GetUserReply'
                pageMeta:
                    $ref: '#/components/schemas/UserPaginationListReply_Page'
        UserPaginationListReply_Page:
            type: object
            properties:
                totalPages:
                    type: integer
                    format: int64
                totalRows:
                    type: integer
                    format: int64
                pageSize:
                    type: integer
                    format: int64
                currentPage:
                    type: integer
                    format: int64
tags:
    - name: Admin
    - name: User
